asset.require('./static_server')

local guiCustomization = asset.require('customization/gui')

-- Select which commit hashes to use for the frontend and backend
local frontendHash = "c603ad07d1407a7d3def43f1e203244cee1c06f6"
local dataProvider = "data.openspaceproject.com/files/webgui"

local frontend = asset.syncedResource({
    Identifier = "WebGuiFrontend",
    Name = "Web Gui Frontend",
    Type = "UrlSynchronization",
    Url = dataProvider .. "/frontend/" ..  frontendHash .. "/frontend.zip"
})

asset.onInitialize(function ()
    -- Unzip the frontend bundle
    local dest = frontend .. "/frontend"
    if not openspace.directoryExists(dest) then
        openspace.unzipFile(frontend .. "/frontend.zip", dest, true)
    end

    -- Do not serve the files if we are in webgui development mode.
    -- In that case, you have to serve the webgui manually, using `npm start`.
    if not guiCustomization.webguiDevelopmentMode then
        local directories = openspace.getPropertyValue("Modules.WebGui.Directories")
        directories[#directories + 1] = "frontend"
        directories[#directories + 1] = frontend .. '/frontend'

        openspace.setPropertyValueSingle("Modules.WebGui.Directories", directories)
    end

    -- The GUI contains date and simulation increment,
    -- so let's remove these from the dashboard.
    if openspace.getPropertyValue('Modules.CefWebGui.Visible') then
        openspace.setPropertyValueSingle('Dashboard.Date.Enabled', false)
        openspace.setPropertyValueSingle('Dashboard.SimulationIncrement.Enabled', false)
    end
end)

asset.onDeinitialize(function ()
    -- Remove the frontend endpoint
    local directories = openspace.getPropertyValue("Modules.WebGui.Directories")
    local newDirectories;

    for i = 0, #directories, 2 do
        if (string.find(directories[i], "frontend") == nil) then
            newDirectories[#newDirectories + 1] = directories[i]
            newDirectories[#newDirectories + 1] = directories[i + 1]
        end
    end
    openspace.setPropertyValueSingle("Modules.WebGui.Directories", newDirectories)
end)
